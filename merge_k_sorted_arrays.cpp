// Problem Link - https://www.interviewbit.com/problems/merge-k-sorted-arrays/
/* Problem solution function ----------------------------------------+
vector<int> jodkar(vector<int> pehla, vector<int> doosra)   <--------+
{
    vector<int> akhiri;
    int pailda = 0;
    int doolda = 0;
    int size_pehla = pehla.size();
    int size_doosra = doosra.size();
    while(pailda < size_pehla && doolda < size_doosra)
    {
        if(pehla[pailda] < doosra[doolda])
        {
            akhiri.push_back(pehla[pailda]);
            pailda++;
        }
        else
        {
            akhiri.push_back(doosra[doolda]);
            doolda++;
        }
    }
    // cout<<"pailda = "<<pailda<<" doolda = "<<doolda<<endl;
    while(pailda < size_pehla)
    {
        akhiri.push_back(pehla[pailda]);
        pailda++;
    }
    while(doolda < size_doosra)
    {
        akhiri.push_back(doosra[doolda]);
        doolda++;
    }
    // cout<<"pailda = "<<pailda<<" doolda = "<<doolda<<endl<<"----------------------------------------------------"<<endl;
    return akhiri;
}
vector<int> recursor(vector<vector<int>> A, int dharti, int akaash)
{
    if(dharti<akaash)
    {
        int beechka = (dharti+akaash)/2;
        vector<int> pehla = recursor(A, dharti, beechka);
        vector<int> doosra = recursor(A, beechka+1, akaash);
        return jodkar(pehla, doosra);
    }
    return A[akaash];
}
vector<int> Solution::solve(vector<vector<int> > &A) {
    int dharti = 0;
    int akaash = A.size()-1;
    return recursor(A, dharti, akaash);
}
*/
#include <bits/stdc++.h>
using namespace std;
vector<int> jodkar(vector<int> pehla, vector<int> doosra)
{
    vector<int> akhiri;
    int pailda = 0;
    int doolda = 0;
    int size_pehla = pehla.size();
    int size_doosra = doosra.size();
    while(pailda < size_pehla && doolda < size_doosra)
    {
        if(pehla[pailda] < doosra[doolda])
        {
            akhiri.push_back(pehla[pailda]);
            pailda++;
        }
        else
        {
            akhiri.push_back(doosra[doolda]);
            doolda++;
        }
    }
    cout<<"pailda = "<<pailda<<" doolda = "<<doolda<<endl;
    while(pailda < size_pehla)
    {
        akhiri.push_back(pehla[pailda]);
        pailda++;
    }
    while(doolda < size_doosra)
    {
        akhiri.push_back(doosra[doolda]);
        doolda++;
    }
    cout<<"pailda = "<<pailda<<" doolda = "<<doolda<<endl<<"----------------------------------------------------"<<endl;
    return akhiri;
}
vector<int> recursor(vector<vector<int>> A, int dharti, int akaash)
{
    if(dharti<akaash)
    {
        int beechka = (dharti+akaash)/2;
        vector<int> pehla = recursor(A, dharti, beechka);
        vector<int> doosra = recursor(A, beechka+1, akaash);
        return jodkar(pehla, doosra);
    }
    return A[dharti];
}
vector<int> solve(vector<vector<int> > &A) {
    int dharti = 0;
    int akaash = A.size()-1;
    return recursor(A, dharti, akaash);
}
int main()
{

    vector<vector<int>> A = {{1719, 2325, 2382, 3763, 3843, 6362, 8497, 9023, 9730, 10171, 10712, 10936, 11280, 13192, 14615, 18838, 21452, 21719, 25385, 25716, 26521, 26801, 28377, 28581, 29479, 29945},
    {595, 1358, 2044, 2234, 3837, 4586, 4890, 4921, 7007, 8443, 8700, 9008, 11559, 12714, 12804, 14739, 15408, 16651, 18147, 20018, 21958, 26040, 26687, 26941, 31167, 31548},
    {3204, 3428, 3552, 6051, 7443, 8068, 8494, 9928, 10025, 10506, 14046, 14327, 15295, 15471, 18673, 20007, 21479, 21637, 23873, 24803, 25034, 26568, 27564, 28404, 28752, 29412},
    {683, 1158, 1407, 2624, 3618, 3913, 4281, 6559, 7282, 9141, 9156, 9601, 11875, 12178, 16005, 17243, 19840, 23387, 24630, 24963, 25721, 27146, 29450, 30585, 32275, 32450},
    {883, 1419, 1851, 1977, 6939, 7625, 10204, 10285, 11012, 13543, 15801, 17128, 17317, 18520, 19085, 19172, 19626, 19682, 20085, 20873, 21142, 22146, 23823, 24148, 25230, 28279},
    {1091, 1581, 2049, 2565, 4011, 6672, 7100, 8550, 9297, 10364, 12525, 12748, 18438, 19895, 22034, 22259, 22789, 25945, 25955, 26118, 26517, 31222, 31339, 31592, 31917, 32350},
    {527, 1554, 1607, 1754, 1915, 3614, 4040, 5685, 10571, 12796, 13394, 14099, 14744, 17174, 19467, 19701, 21141, 22424, 23951, 24118, 24254, 26463, 28259, 28264, 28385, 29910},
    {343, 2561, 3949, 4239, 5737, 8036, 10398, 11902, 13396, 13742, 15585, 16220, 16468, 18187, 21191, 22926, 23003, 24121, 24898, 24951, 25015, 26837, 27782, 31011, 32331, 32603},
    {560, 572, 3012, 5242, 6505, 6871, 7751, 8194, 9626, 10929, 10971, 11875, 14402, 14798, 17968, 18332, 18350, 18702, 19631, 26936, 27750, 29016, 29149, 32086, 32152, 32619},
    {691, 2615, 2825, 3695, 5017, 7482, 11367, 14605, 15657, 16960, 18876, 20893, 21368, 22695, 23203, 23815, 24123, 24262, 26389, 26671, 26741, 28713, 28864, 29542, 30261, 32278},
    {1080, 1910, 2546, 3116, 3711, 4426, 4727, 5168, 8730, 13914, 14000, 15085, 15426, 16435, 16843, 20340, 20677, 24828, 25547, 25997, 26691, 27192, 27369, 29047, 31084, 31871},
    {2131, 2401, 2615, 4394, 5199, 7149, 7368, 8002, 8818, 9829, 10726, 11618, 17451, 17579, 20894, 20972, 22682, 24717, 26568, 26836, 28090, 30925, 31095, 31291, 31429, 32515},
    {209, 219, 602, 1623, 6330, 6363, 6510, 9062, 14466, 14869, 15114, 15184, 15315, 16198, 16296, 20654, 23608, 25221, 25578, 25745, 28052, 28137, 28212, 29484, 30361, 31546},
    {3323, 3461, 3513, 6225, 6347, 8053, 8582, 9976, 13481, 13996, 16095, 16480, 16711, 16852, 17771, 19149, 23504, 25061, 25323, 26621, 26639, 30067, 30510, 31199, 31593, 32242},
    {60, 4127, 4211, 4648, 5949, 6056, 6461, 7830, 9214, 11077, 12466, 13039, 13576, 14271, 18123, 19093, 19657, 24349, 26048, 28340, 29071, 29404, 30824, 30936, 31575, 32354},
    {265, 641, 1101, 1499, 2734, 2980, 6767, 7732, 9238, 9747, 11915, 12241, 13038, 13425, 15018, 15680, 16171, 16658, 21668, 22342, 25000, 28217, 29936, 30300, 30942, 32566},
    {1287, 1295, 1711, 1982, 3287, 4312, 6065, 6207, 6229, 8099, 9112, 9259, 9814, 10099, 11359, 13853, 17389, 17845, 18185, 24261, 24388, 26280, 28369, 28432, 28912, 30799},
    {582, 1010, 1764, 4840, 6057, 9163, 9253, 9691, 9770, 10604, 10767, 11064, 11085, 13207, 13359, 17098, 21699, 21783, 24854, 25624, 25709, 26414, 27590, 27965, 31715, 31985},
    {344, 1420, 2873, 8544, 9763, 10085, 10813, 10965, 11096, 12586, 13585, 16786, 17079, 18083, 21124, 22339, 23907, 24326, 25255, 26349, 27621, 28135, 29462, 31408, 31482, 32723},
    {927, 2090, 4930, 5820, 6018, 6393, 7583, 7875, 8850, 9517, 10138, 10165, 11189, 12915, 13660, 14241, 18068, 22135, 22864, 23789, 24219, 26238, 28958, 31056, 31737, 31801},
    {1870, 3412, 5791, 6460, 6993, 7043, 7261, 8792, 10583, 10904, 10986, 11598, 14641, 16479, 16818, 17230, 18908, 21106, 22366, 23129, 24494, 24679, 25487, 26025, 28128, 31226},
    {1228, 1271, 4133, 6452, 7133, 7366, 9185, 10369, 10435, 11244, 11578, 12111, 12695, 14769, 16688, 17816, 18773, 19151, 19311, 19710, 20221, 21454, 25633, 26095, 26154, 28250},
    {1305, 1377, 2293, 2414, 3590, 4774, 4836, 8392, 8864, 9542, 14181, 14184, 14440, 15615, 15752, 16343, 16483, 17993, 21840, 21845, 22046, 22527, 22939, 24757, 27610, 28652}};
    cout<<A.size()<<" "<<A[0].size()<<endl;
    vector<int> bie = solve(A);
    for (int i = 0; i < bie.size(); i++)
    {
        cout<<bie[i]<<endl;
    }   
}